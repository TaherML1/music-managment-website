name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  build-jar:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: my-app-jar
          path: target/*.jar

  build-docker-image:
    runs-on: ubuntu-latest
    needs: build-jar
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: my-app-jar
          path: target/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/music_app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/music_app:latest

  deploy-to-cloud:
    runs-on: ubuntu-latest
    needs: build-jar
    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: my-app-jar
          
      - name: Install SSH key (AWS)
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.AWS_KNOWN_HOSTS }}
          
      - name: Copy JAR to AWS EC2
        run: |
          scp -o StrictHostKeyChecking=no -r target/*.jar ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }}:/home/ubuntu/app
          ssh -o StrictHostKeyChecking=no ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }} "chmod +x /home/ubuntu/app/*.jar"